@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BusinessLayer
@using MVC.Areas.Identity.Pages.Account
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<head>
    <link rel="stylesheet" href="~/css/header.css"> <!-- Linking the login.css -->
    <title>Edit User</title>
</head>
@if (SignInManager.IsSignedIn(User))
{
    if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User) ?? throw new InvalidOperationException(), "Administrator"))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-controller="Users" asp-action="Index" title="Manage">Manage All Users</a>
        </li>
    }
    <li class="nav-item">
        <a asp-area="Identity" asp-page="/Account/Manage/Index" class="nav-link text-dark" id="manage" title="Manage">Hello @UserManager.GetUserName(User)!</a>

    </li>
    <li class="nav-item">
        <a asp-controller="Courses" asp-action="Index" class="nav-link text-dark">Manage courses</a>

    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="button">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}

